#!/usr/bin/env ruby -w

$: << File.join(File.dirname(__FILE__),'..','lib')

require 'fileutils'
require 'optparse'
require 'methadone'
require 'methadone/cli'

include FileUtils
include Methadone::Main
include Methadone::CLI

main do |basedir,force|
  check_and_prepare_basedir!(basedir,force)

  gemname = File.basename(basedir)
  debug "Creating project for gem #{gemname}"

  chdir File.dirname(basedir)

  %x[bundle gem #{gemname}]

  chdir gemname

  template_dirs_in(:full).each  { |dir| mkdir_p dir }

  ["Rakefile", "test/tc_something.rb", "features/support/env.rb"].each do |file|
    copy_file file
  end

  copy_file "features/executable.feature", :as => "#{gemname}.feature", :binding => binding
  copy_file "features/step_definitions/executable_steps.rb", :as => "#{gemname}_steps.rb"
  copy_file "bin/executable", :as => gemname, :executable => true

  add_to_file "#{gemname}.gemspec", [
    "  s.add_development_dependency('rdoc')",
    "  s.add_development_dependency('aruba')",
    "  s.add_development_dependency('rake','~> 0.9.2')",
    "  s.add_dependency('methadone')",
  ], :before => /^end\s*$/
end

options = {}
option_parser = OptionParser.new do |opts|
  executable = File.basename(__FILE__)
  opts.banner = "Usage: #{executable} [options] app_name\n\n" +
  "Kick the bash habit by bootstrapping your Ruby command-line apps\n\nOptions:"

  opts.on("--force","Overwrite files if they exist") do
    options[:force] = true
  end
end

option_parser.parse!

EXE = File.expand_path(__FILE__)

if ARGV.empty?
  STDERR.puts("error: app_dir required")
  exit 2
end

ARGV << options[:force]
go!

