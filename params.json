{"name":"Methadone","body":"Methadone is the best way to create simple command-line applications in Ruby.  It sports an concise, readable set of helper methods, without sacrificing any of the power you can get from `OptionParser`\r\n\r\n# The simplest Methadone-powered app\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\nrequire 'methadone'\r\n\r\ninclude Methadone::Main\r\n\r\nmain do \r\n # whatever you want your app to do\r\nend\r\n\r\ngo!\r\n```\r\n\r\n# A more typical app\r\n\r\nNot terribly interesting.  Let's:\r\n\r\n* add a description\r\n* add some command-line options\r\n* add a command-line argument\r\n* let users know what version we're using\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\nrequire 'methadone'\r\n\r\ninclude Methadone::Main\r\ninclude Methadone::CLILogging\r\n\r\nmain do \r\n  puts options['ip-address'] if options[:verbose]\r\nend\r\n\r\nversion     '0.0.1'\r\ndescription 'Show off how great Methadone is!'\r\n\r\non(\"--verbose\",\"Be verbose\")\r\noptions['ip-address'] = '127.0.0.1'\r\non(\"-i IP_ADDRESS\",\"--ip-address\",\"IP Address\",/^\\d+\\.\\d+\\.\\d+\\.\\d+$/)\r\n\r\ngo!\r\n```\r\n\r\nNow, let's run our app:\r\n\r\n```shell\r\n$ our_app --help\r\nUsage: our_app [options]\r\n\r\nShow off how great Methadone is!\r\n\r\nv0.0.1\r\n\r\nOptions:\r\n        --version                    Show help/version info\r\n        --verbose                    Be verbose\r\n    -i, --ip-address IP_ADDRESS      IP Address\r\n                                     (default: 127.0.0.1)\r\n```\r\n\r\nWoot!  Perfectly formatted help.  We also have easy access to the parsed options:\r\n\r\n```shell\r\n$ our_app -i 192.268.0.1\r\n$ our_app -i 192.268.0.1 --verbose\r\n192.168.1.0\r\n$ our_app -i localhost\r\ninvalid argument: -i localhost\r\n```\r\n\r\nOptions are all parsed, and the regexp we passed to `on` is used to validate the arguments.\r\n\r\n# Bootstrapping\r\n\r\nTyping all that in to get going is no fun.  Let's use `bin/methadone` to bootstrap our app:\r\n\r\n\r\n```shell\r\n$ methadone -h\r\nUsage: methadone [options] app_name\r\n\r\nKick the bash habit by bootstrapping your Ruby command-line apps\r\n\r\nv1.1.0\r\n\r\nOptions:\r\n        --force                      Overwrite files if they exist\r\n        --[no-]readme                [Do not ]produce a README file\r\n        --rspec                      Generate RSpec unit tests instead of Test::Unit\r\n    -l, --license LICENSE            Specify the license for your project\r\n                                     (mit|apache|custom|NONE)\r\n        --log-level LEVEL            Set the logging level\r\n                                     (debug|info|warn|error|fatal)\r\n                                     (Default: info)\r\n        --version                    Show help/version info\r\n\r\nArguments:\r\n\r\n    app_name\r\n        Name of your app, which is used for the gem name and executable name\r\n$ methadone --readme -l mit my_app\r\n$ cd my_app/\r\n$ ls\r\nGemfile         LICENSE.txt     README.rdoc     bin/            lib/            test/\r\nLICENSE         README.md       Rakefile        features/       my_app.gemspec\r\n$ bundle install\r\n$ bundle exec bin/my_app --help\r\nUsage: my_app [options]\r\n\r\nv0.0.1\r\n\r\nOptions:\r\n        --version                    Show help/version info\r\n        --log-level LEVEL            Set the logging level\r\n                                     (debug|info|warn|error|fatal)\r\n                                     (Default: info)\r\n$ rake\r\nRun options: \r\n\r\n# Running tests:\r\n\r\n.\r\n\r\nFinished tests in 0.000521s, 1919.3858 tests/s, 1919.3858 assertions/s.\r\n\r\n1 tests, 1 assertions, 0 failures, 0 errors, 0 skips\r\nFeature: My bootstrapped app kinda works\r\n  In order to get going on coding my awesome app\r\n  I want to have aruba and cucumber setup\r\n  So I don't have to do it myself\r\n\r\n  Scenario: App just runs\r\n    When I get help for \"my_app\"\r\n    Then the exit status should be 0\r\n    And the banner should be present\r\n    And the banner should document that this app takes options\r\n    And the following options should be documented:\r\n      | --version |\r\n    And the banner should document that this app takes no arguments\r\n```\r\n\r\nIn seconds, we have everything we need to start writing our app, including unit and integration tests.  Nice!\r\n\r\n# What else is there?\r\n\r\n* Advanced logging\r\n* Expedient external command execution\r\n* Cucumber steps for integration test\r\n* So much more!\r\n\r\n# Now what?\r\n\r\n* [Tutorial](http://itunes.apple.com/us/book/kick-bash-habit-ruby-methadone/id515825242?ls=1) for iPad\r\n* [Source](http://github.com/davetron5000/methadone)\r\n* [API Documentation](http://rdoc.info/github/davetron5000/methadone/master/frames)","tagline":"Kick the bash habit - start your command line scripts off right in Ruby","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}