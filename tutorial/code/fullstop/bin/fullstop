#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'fullstop'
require 'fileutils'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH

  main do |repo_url|
    
    Dir.chdir options['checkout-dir'] do
      basedir = repo_url.split(/\//)[-1].gsub(/\.git$/,'')
      # vvv
      if options[:force] && Dir.exists?(basedir)
        warn "deleting #{basedir} before cloning"
        FileUtils.rm_rf basedir
      end
      # ^^^
      if sh("git clone #{repo_url}") == 0
        Dir.entries(basedir).each do |file|
          next if file == '.' || file == '..' || file == '.git'
          source_file = File.join(basedir,file)
          # vvv
          FileUtils.rm(file) if File.exists?(file) && options[:force]
          # ^^^
          FileUtils.ln_s source_file,'.'
        end
      else
        exit_now!(1,"checkout dir already exists, use --force to overwrite")
      end
    end
  end

  version Fullstop::VERSION

  description 'Manages dotfiles from a git repo'

  options['checkout-dir'] = ENV['HOME']
  on("--force","Overwrite files if they exist")
  on("-d DIR","--checkout-dir","Where to clone the repo")

  arg :repo_url

  use_log_level_option

  go!
end
